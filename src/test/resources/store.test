/* using "text" will set the content-type to text/plain */
using bucket "Foo"
    store "MyKey"
    with text "This is text";

/* using "json" will set the content-type to application/json */
using bucket "Foo"
    store "MyKey"
    with json "{foo:bar}";

/* using "json" will set the content-type to application/xml */
using bucket "Foo"
    store "MyKey"
    with xml "<foo>bar</foo>";

/* you can also define your own content type */
store "MyKey" with content-type "text/csv" and "1,2,3,4";


using bucket "Foo" store "MyKey" with text
~%~
This is "Free form text" and doesn't need any escaping!
~%~;


using bucket "Foo" store "MyKey" with json
~%~
{
    "person": {
        "name": "Dave Parfitt",
        "city": "Buffalo",
        "state": "NY"
        }
}
~%~;

using bucket "Foo" store "MyKey" with xml
~%~
<email>
    <to>foo@example.com</to>
    <from>bar@example.com</from>
    <subject>This is a reminder</subject>
    <body>Go to the dentist!</body>
</email>
~%~;


using bucket "Foo" store "MyKey" with xml
~%~
<email>
    <to>foo@example.com</to>
    <from>bar@example.com</from>
    <subject>This is a reminder</subject>
    <body>Go to the dentist!</body>
</email>
~%~
    with options
        w = 1,
        pw = 2,
        dw = 1000,
        return_body = true,
        if_not_modified = false,
        if_none_match = true;

using bucket "Foo"
    store "MyKey"
        with text "This is text"
        with options w = 1, pw = 2;

// some of these may be duplicates of tests above
using bucket "Foo1" store "bar" with json "{\"foo\":\"bar\"}";
using bucket "Foo2" store "bar" with text "this is a test";
using bucket "Foo3" store "bar" with xml "<xml><foo>test</foo></xml>";

use bucket "Foo";
store "Bar1" with json "{\"foo\":\"bar\"}";
store "Bar3" with xml "<xml><foo>test</foo></xml>";
store "Bar2" with text "this is a test";
store "Bar2" with text "this is a test" @ foo;

store "Bar3" with xml "<xml><foo>test</foo></xml>";

store "Bar4" with index "MyIndex" = "val1" and json  "{\"foo\":\"bar\"}";
store "Bar4" with index "MyIndex" = "val1" and index "MyIndex2" = "val2" and json  "{\"foo\":\"bar\"}";

store "Bar1" with json "{\"foo\":\"bar\"}" and options return_body="true";
store "Bar1" with json "{\"foo\":\"bar\"}" and options return_body="true", w="1";

using bucket "X" store "Bar1" with json "{\"foo\":\"bar\"}" and options return_body=true, w=1;

using bucket "X" store "Bar1" with json "{\"foo\":\"bar\"}" and options return_body=true, w=1 @ foo;


let myObj = fetch "Key1";
store myObj with text "This is a new test";

